name: Build and Upload to Launchpad PPA

on:
    workflow_dispatch: {}

jobs:
    build-and-upload:
        runs-on: ubuntu-latest

        env:
            GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
            LAUNCHPAD_USERNAME: ${{ secrets.LAUNCHPAD_USERNAME }}
            LAUNCHPAD_PASSWORD: ${{ secrets.LAUNCHPAD_PASSWORD }}

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Install dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y jq devscripts debhelper dh-make dput gnupg lintian build-essential

            - name: Extract package name and version from package.json
              id: extract
              run: |
                  echo "PACKAGE_NAME=$(jq -r '.name' package.json)" >> $GITHUB_ENV
                  echo "VERSION=$(jq -r '.version' package.json)" >> $GITHUB_ENV

            - name: Prepare Debian packaging directory
              run: |
                  rm -rf ${PACKAGE_NAME}-${VERSION}
                  mkdir ${PACKAGE_NAME}-${VERSION}
                  cp -r . ${PACKAGE_NAME}-${VERSION}/
                  cd ${PACKAGE_NAME}-${VERSION}
                  dh_make -s -y -p ${PACKAGE_NAME}_${VERSION}
                  rm -f debian/*.ex debian/*.EX debian/README.*
                  printf "%s\n" "${PACKAGE_NAME} (${VERSION}) unstable; urgency=medium" "" "  * Initial release." "" " -- Oblivion Desktop <$LAUNCHPAD_USERNAME>  $(date -R)" > debian/changelog

            - name: Setup GPG for signing commits and packages
              run: |
                  echo "${{ secrets.GPG_PRIVATE_KEY }}" > private.key
                  gpg --batch --import private.key
                  git config --global user.signingkey "$GPG_KEY_ID"
                  git config --global commit.gpgsign true
                  git config --global user.name "Oblivion Desktop"
                  git config --global user.email "$LAUNCHPAD_USERNAME"

            - name: Build source package
              run: |
                  cd ${PACKAGE_NAME}-${VERSION}
                  debuild -S -sa -k"$GPG_KEY_ID"

            - name: Sign changes and dsc files
              run: |
                  cd ..
                  gpg --batch --yes -u "$GPG_KEY_ID" --armor --detach-sign ${PACKAGE_NAME}_${VERSION}_source.changes
                  gpg --batch --yes -u "$GPG_KEY_ID" --armor --detach-sign ${PACKAGE_NAME}_${VERSION}.dsc

            - name: Upload source package to Launchpad PPA
              run: |
                  dput ppa ${PACKAGE_NAME}_${VERSION}_source.changes
